# Generated by Django 4.0.5 on 2022-08-11 04:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import happyrabbit.abc.activity
import happyrabbit.abc.service.activity
import happyrabbit.activity.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityModel',
            fields=[
                ('activity_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=16)),
                ('description', models.CharField(blank=True, max_length=1024)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'activity_category',
            },
            bases=(happyrabbit.abc.activity.Activity, models.Model),
        ),
        migrations.CreateModel(
            name='ActivityPaginationModel',
            fields=[
                ('pagination_token', models.CharField(max_length=21, primary_key=True, serialize=False)),
                ('min_index', models.PositiveIntegerField()),
                ('max_index', models.PositiveIntegerField()),
                ('query', models.JSONField(decoder=happyrabbit.activity.models.SearchQueryJSONDecoder, encoder=happyrabbit.activity.models.SearchQueryJSONEncoder)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Pagination',
                'verbose_name_plural': 'Pagination Set',
                'db_table': 'activity_pagination',
            },
            bases=(happyrabbit.abc.service.activity.Pagination, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('category_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=16)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            bases=(happyrabbit.abc.activity.Category, models.Model),
        ),
        migrations.RemoveField(
            model_name='activity',
            name='category',
        ),
        migrations.RemoveField(
            model_name='activity',
            name='owner',
        ),
        migrations.AlterModelOptions(
            name='rewardrule',
            options={'verbose_name': 'Reward Rule', 'verbose_name_plural': 'Reward Rules'},
        ),
        migrations.AlterField(
            model_name='rewardrule',
            name='reward_rule_id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.AddField(
            model_name='activitymodel',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='activity.categorymodel'),
        ),
        migrations.AddField(
            model_name='activitymodel',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='rewardrule',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_rules', to='activity.activitymodel'),
        ),
        migrations.DeleteModel(
            name='Activity',
        ),
    ]
